// ViewRe is a web-based code review tool.
// Copyright (C) 2025  Frank Mayer

//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

package view

import (
	"viewre/internal/db"
	"viewre/internal/repository"
)

templ Repo() {
	@Layout("ViewRe") {
		<h1 class="text-4xl font-bold mb-8">{ ctx.Value("repo").(string) }</h1>
		if repo, ok := db.Repos.Get(ctx.Value("repo").(string)); !ok {
			<p>Repo not found</p>
		} else {
			<p class="text-xs text-gray-500 mb-8">{ repo.Url }</p>
			<form
				class="mb-8"
				onsubmit="diff();return false;"
			>
				<label class="input">
					Base:
					<input type="text" name="base" id="base_commit" required/>
				</label>
				<label class="input">
					Change:
					<input type="text" name="change" id="change_commit" required/>
				</label>
				<button class="btn" onclick="diff()">Diff</button>
			</form>
			@templ.Raw(repository.Log(ctx, repo))
			<script>
                const commitsContentEl = document.getElementById("commits-content");
                const baseCommitEl = document.getElementById("base_commit");
                const changeCommitEl = document.getElementById("change_commit");
                const repo = window.location.pathname.split("/")[2];

                baseCommitEl.value = "";
                changeCommitEl.value = "";

                commitsContentEl.addEventListener("click", (event) => {
                    const targetEl = event.target;
                    if (!(targetEl.dataset.commit)) {
                        return;
                    }
                    compare(targetEl.dataset.commit);
                });
                function diff() {
                    const base = baseCommitEl.value;
                    const change = changeCommitEl.value;
                    if (!base || !change) {
                        alert("Please enter a base and change commit.");
                        return;
                    }
                    const targetUrl = `/compare/${repo}/${base}/${change}`;
                    window.location.href = targetUrl;
                }
                function compare(commit) {
                    if (!commit) {
                        return;
                    }
                    if (!baseCommitEl.value) {
                        baseCommitEl.value = commit;
                        return;
                    }
                    if (!changeCommitEl.value) {
                        changeCommitEl.value = commit;
                        return;
                    }
                }
            </script>
		}
	}
}
